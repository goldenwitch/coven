<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net10.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="../Coven.Spellcasting.Agents/Coven.Spellcasting.Agents.csproj" />
    <ProjectReference Include="../Coven.Spellcasting.Agents.Validation/Coven.Spellcasting.Agents.Validation.csproj" />
    <ProjectReference Include="..\Coven.Chat\Coven.Chat.csproj" />
    <!-- Build the MCP shim alongside and make its output available -->
    <ProjectReference Include="../Coven.Spellcasting.Agents.Codex.McpShim/Coven.Spellcasting.Agents.Codex.McpShim.csproj" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="Coven.Spellcasting.Agents.Codex.Tests" />
  </ItemGroup>

  <!-- After building this project, copy the built shim to our output under mcp-shim/ -->
  <Target Name="CopyMcpShim" AfterTargets="Build">
    <!-- Resolve the target path of the shim for the current Configuration -->
    <MSBuild Projects="../Coven.Spellcasting.Agents.Codex.McpShim/Coven.Spellcasting.Agents.Codex.McpShim.csproj"
             Targets="GetTargetPath"
             Properties="Configuration=$(Configuration)">
      <Output TaskParameter="TargetOutputs" ItemName="McpShimTarget" />
    </MSBuild>

    <!-- Ensure destination exists -->
    <MakeDir Directories="$(OutDir)mcp-shim" />

    <!-- Copy the shim's primary output (exe/dll) next to our binaries -->
    <Copy SourceFiles="@(McpShimTarget)"
          DestinationFolder="$(OutDir)mcp-shim"
          SkipUnchangedFiles="true" />
  </Target>

  <PropertyGroup>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="LICENSE" Pack="true" PackagePath="" />
  </ItemGroup>

</Project>
