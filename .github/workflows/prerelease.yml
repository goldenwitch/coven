name: prerelease

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-pack-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET (include preview)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            10.0.x
          include-prerelease: true

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Detect affected packages
        id: affected
        shell: bash
        run: |
          set -euo pipefail
          BASE="${{ github.event.before }}"
          if [[ -z "$BASE" || "$BASE" == "0000000000000000000000000000000000000000" ]]; then
            CHANGED=$(git show --pretty="" --name-only "${GITHUB_SHA}")
          else
            CHANGED=$(git diff --name-only "$BASE" "${GITHUB_SHA}")
          fi
          echo "Changed files:"; echo "$CHANGED"
          MAP_PATHS=$(jq -r '.packages[].path' Build/packages.manifest.json)
          echo "Manifest paths:"; echo "$MAP_PATHS"
          AFFECTED=()
          while IFS= read -r p; do
            [[ -z "$p" ]] && continue
            if echo "$CHANGED" | grep -E "^${p}(/|$)" >/dev/null; then
              AFFECTED+=("$p")
            fi
          done <<< "$MAP_PATHS"
          if [[ ${#AFFECTED[@]} -eq 0 ]]; then
            echo "any=false" >> "$GITHUB_OUTPUT"
            echo "paths=" >> "$GITHUB_OUTPUT"
          else
            # comma-separated for script consumption
            PATHS_CSV=$(IFS=,; echo "${AFFECTED[*]}")
            echo "any=true" >> "$GITHUB_OUTPUT"
            echo "paths=$PATHS_CSV" >> "$GITHUB_OUTPUT"
            echo "Affected paths: $PATHS_CSV"
          fi

      - name: Pack prerelease
        shell: bash
        if: steps.affected.outputs.any == 'true'
        run: |
          chmod +x Build/pack.sh
          ./Build/pack.sh --paths "${{ steps.affected.outputs.paths }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: steps.affected.outputs.any == 'true'
        with:
          name: nupkgs
          path: artifacts/nupkg/*

      - name: Compute version
        id: ver
        shell: bash
        if: steps.affected.outputs.any == 'true'
        run: |
          BASE=$(cat Build/VERSION | tr -d '\n' | tr -d '\r')
          SHA=${GITHUB_SHA::7}
          echo "base=${BASE}" >> $GITHUB_OUTPUT
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          echo "version=${BASE}-preview.${GITHUB_RUN_NUMBER}+sha.${SHA}" >> $GITHUB_OUTPUT

      - name: Create GitHub prerelease
        uses: softprops/action-gh-release@v2
        if: steps.affected.outputs.any == 'true'
        with:
          tag_name: v${{ steps.ver.outputs.version }}
          name: v${{ steps.ver.outputs.version }}
          prerelease: true
          draft: false
          generate_release_notes: true
          files: |
            artifacts/nupkg/*.nupkg
            artifacts/nupkg/*.snupkg
