name: prerelease-on-pr

on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: pr-prerelease-${{ github.event.pull_request.number }}
  cancel-in-progress: false

env:
  NUGET_SOURCE: https://api.nuget.org/v3/index.json
  HAS_NUGET_KEY: ${{ secrets.NUGET_API_KEY != '' }}
  IS_SAME_REPO: ${{ github.event.pull_request.head.repo.full_name == github.repository }}

jobs:
  prerelease:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Ensure tools (jq)
        run: |
          if ! command -v jq >/dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'
          dotnet-quality: 'preview'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Make scripts executable
        run: chmod +x build/ci/prerelease/*.sh

      - name: Determine changed packages
        id: affected
        run: |
          build/ci/prerelease/detect-changed.sh \
            --base "${{ github.event.pull_request.base.sha }}" \
            --head "${{ github.event.pull_request.head.sha }}"

      - name: Stop early if nothing changed
        if: steps.affected.outputs.any != 'true'
        run: echo "No package roots changed; skipping prerelease."

      - name: Compute prerelease version
        if: steps.affected.outputs.any == 'true'
        id: ver
        run: |
          build/ci/prerelease/compute-version.sh \
            --pr "${{ github.event.pull_request.number }}" \
            --run "${{ github.run_number }}" \
            --sha "${{ github.sha }}"

      - name: Build (sanity)
        if: steps.affected.outputs.any == 'true'
        run: dotnet build ./src/ -c Release --nologo

      - name: (Optional) Build CodeFix bundle for analyzers
        if: steps.affected.outputs.any == 'true'
        run: |
          if [[ -f src/Coven.Analyzers.CodeFixes/Coven.Analyzers.CodeFixes.csproj ]]; then
            dotnet build src/Coven.Analyzers.CodeFixes/Coven.Analyzers.CodeFixes.csproj -c Release -f netstandard2.0
          fi

      - name: Pack changed packages
        if: steps.affected.outputs.any == 'true'
        run: |
          build/ci/prerelease/pack.sh \
            --paths "${{ steps.affected.outputs.paths }}" \
            --version "${{ steps.ver.outputs.version }}"

      - name: Upload nupkgs (artifact)
        if: steps.affected.outputs.any == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: nupkgs-prerelease
          path: artifacts/nupkg/*
          if-no-files-found: error
          retention-days: 7

      - name: Publish prerelease to NuGet.org
        if: steps.affected.outputs.any == 'true' && env.HAS_NUGET_KEY == 'true' && env.IS_SAME_REPO == 'true'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          build/ci/prerelease/publish.sh --source "$NUGET_SOURCE"